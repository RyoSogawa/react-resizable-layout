{"version":3,"file":"Resizable-0495003d.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../stories/utils/cn.ts","../../stories/components/SampleSeparator.tsx","../../src/constants.ts","../../src/useResizable.ts","../../src/Resizable.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export const cn = (...args: any[]) => args.filter(Boolean).join(' ');\n","import React, { useState } from 'react';\n\nimport { cn } from '../utils/cn';\n\nconst SampleSeparator = ({ id = 'drag-bar', dir, isDragging, disabled, ...props }: any) => {\n  const [isFocused, setIsFocused] = useState(false);\n\n  return (\n    <hr\n      id={id}\n      data-testid={id}\n      tabIndex={disabled ? -1 : 0}\n      className={cn(\n        'sample-drag-bar',\n        dir === 'horizontal' && 'sample-drag-bar--horizontal',\n        !disabled && (isDragging || isFocused) && 'sample-drag-bar--dragging',\n        disabled && 'disabled',\n      )}\n      onFocus={() => setIsFocused(true)}\n      onBlur={() => setIsFocused(false)}\n      {...props}\n    />\n  );\n};\n\nexport default SampleSeparator;\n","export const KEYS_LEFT = ['ArrowLeft', 'Left'];\nexport const KEYS_RIGHT = ['ArrowRight', 'Right'];\nexport const KEYS_UP = ['ArrowUp', 'Up'];\nexport const KEYS_DOWN = ['ArrowDown', 'Down'];\nexport const KEYS_AXIS_X = [...KEYS_LEFT, ...KEYS_RIGHT];\nexport const KEYS_AXIS_Y = [...KEYS_UP, ...KEYS_DOWN];\nexport const KEYS_POSITIVE = [...KEYS_RIGHT, ...KEYS_DOWN];\n","import type React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\n\nimport { KEYS_AXIS_X, KEYS_AXIS_Y, KEYS_POSITIVE } from './constants';\n\nimport type { Resizable, SeparatorProps, UseResizableProps } from './types';\n\nconst useResizable = ({\n  axis,\n  disabled = false,\n  initial = 0,\n  min = 0,\n  max = Infinity,\n  reverse,\n  step = 10,\n  shiftStep = 50,\n  onResizeStart,\n  onResizeEnd,\n  containerRef,\n}: UseResizableProps): Resizable => {\n  const initialPosition = Math.min(Math.max(initial, min), max);\n  const isResizing = useRef(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(initialPosition);\n  const positionRef = useRef(initialPosition);\n  const [endPosition, setEndPosition] = useState(initialPosition);\n\n  const ariaProps = useMemo<SeparatorProps>(\n    () => ({\n      role: 'separator',\n      'aria-valuenow': position,\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      'aria-orientation': axis === 'x' ? 'vertical' : 'horizontal',\n      'aria-disabled': disabled,\n    }),\n    [axis, disabled, max, min, position],\n  );\n\n  const handlePointermove = useCallback(\n    (e: PointerEvent) => {\n      // exit if not resizing\n      if (!isResizing.current) return;\n\n      if (disabled) return;\n\n      e.stopPropagation();\n      e.preventDefault(); // prevent text selection\n\n      let currentPosition = (() => {\n        if (axis === 'x') {\n          if (containerRef?.current) {\n            const containerNode = containerRef.current;\n            const { left, width } = containerNode.getBoundingClientRect();\n            return reverse ? left + width - e.clientX : e.clientX - left;\n          }\n          return reverse ? document.body.offsetWidth - e.clientX : e.clientX;\n        }\n        if (containerRef?.current) {\n          const containerNode = containerRef.current;\n          const { top, height } = containerNode.getBoundingClientRect();\n          return reverse ? top + height - e.clientY : e.clientY - top;\n        }\n        return reverse ? document.body.offsetHeight - e.clientY : e.clientY;\n      })();\n\n      currentPosition = Math.min(Math.max(currentPosition, min), max);\n      setPosition(currentPosition);\n      positionRef.current = currentPosition;\n    },\n    [axis, disabled, max, min, reverse, containerRef],\n  );\n\n  const handlePointerup = useCallback(\n    (e: PointerEvent) => {\n      if (disabled) return;\n\n      e.stopPropagation();\n      isResizing.current = false;\n      setIsDragging(false);\n      setEndPosition(positionRef.current);\n      document.removeEventListener('pointermove', handlePointermove);\n      document.removeEventListener('pointerup', handlePointerup);\n      if (onResizeEnd) onResizeEnd({ position: positionRef.current });\n    },\n    [disabled, handlePointermove, onResizeEnd],\n  );\n\n  const handlePointerdown = useCallback<React.PointerEventHandler>(\n    (e) => {\n      if (disabled) return;\n\n      e.stopPropagation();\n      isResizing.current = true;\n      setIsDragging(true);\n      document.addEventListener('pointermove', handlePointermove);\n      document.addEventListener('pointerup', handlePointerup);\n      if (onResizeStart) onResizeStart({ position: positionRef.current });\n    },\n    [disabled, handlePointermove, handlePointerup, onResizeStart],\n  );\n\n  const handleKeyDown = useCallback<React.KeyboardEventHandler>(\n    (e) => {\n      if (disabled) return;\n\n      if (e.key === 'Enter') {\n        setPosition(initial);\n        positionRef.current = initial;\n        return;\n      }\n      if (\n        (axis === 'x' && !KEYS_AXIS_X.includes(e.key)) ||\n        (axis === 'y' && !KEYS_AXIS_Y.includes(e.key))\n      ) {\n        return;\n      }\n\n      if (onResizeStart) onResizeStart({ position: positionRef.current });\n\n      const changeStep = e.shiftKey ? shiftStep : step;\n      const reversed = reverse ? -1 : 1;\n      const dir = KEYS_POSITIVE.includes(e.key) ? reversed : -1 * reversed;\n\n      const newPosition = position + changeStep * dir;\n      if (newPosition < min) {\n        setPosition(min);\n        positionRef.current = min;\n      } else if (newPosition > max) {\n        setPosition(max);\n        positionRef.current = max;\n      } else {\n        setPosition(newPosition);\n        positionRef.current = newPosition;\n      }\n\n      if (onResizeEnd) onResizeEnd({ position: positionRef.current });\n    },\n    // prettier-ignore\n    [disabled, axis, onResizeStart, shiftStep, step, reverse, position, min, max, onResizeEnd, initial],\n  );\n\n  const handleDoubleClick = useCallback<React.MouseEventHandler>(() => {\n    if (disabled) return;\n    setPosition(initial);\n    positionRef.current = initial;\n  }, [disabled, initial]);\n\n  return {\n    position,\n    endPosition,\n    isDragging,\n    separatorProps: {\n      ...ariaProps,\n      onPointerDown: handlePointerdown,\n      onKeyDown: handleKeyDown,\n      onDoubleClick: handleDoubleClick,\n    },\n    setPosition,\n    // deprecated. next version will remove this.\n    splitterProps: {\n      ...ariaProps,\n      onPointerDown: handlePointerdown,\n      onKeyDown: handleKeyDown,\n      onDoubleClick: handleDoubleClick,\n    },\n  };\n};\n\nexport default useResizable;\n","import useResizable from './useResizable';\n\nimport type { ResizableProps } from './types';\n\nconst Resizable = ({\n  axis,\n  disabled = false,\n  initial = 0,\n  min = 0,\n  max = Infinity,\n  reverse,\n  onResizeStart,\n  onResizeEnd,\n  children,\n  containerRef,\n}: ResizableProps): JSX.Element => {\n  const resizable = useResizable({\n    axis,\n    disabled,\n    initial,\n    min,\n    max,\n    reverse,\n    onResizeStart,\n    onResizeEnd,\n    containerRef,\n  });\n\n  return children(resizable);\n};\n\nexport default Resizable;\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","module","cn","args","SampleSeparator","id","dir","isDragging","disabled","props","isFocused","setIsFocused","useState","jsx","KEYS_LEFT","KEYS_RIGHT","KEYS_UP","KEYS_DOWN","KEYS_AXIS_X","KEYS_AXIS_Y","KEYS_POSITIVE","useResizable","axis","initial","min","max","reverse","step","shiftStep","onResizeStart","onResizeEnd","containerRef","initialPosition","isResizing","useRef","setIsDragging","position","setPosition","positionRef","endPosition","setEndPosition","ariaProps","useMemo","handlePointermove","useCallback","currentPosition","containerNode","left","width","top","height","handlePointerup","handlePointerdown","handleKeyDown","changeStep","reversed","newPosition","handleDoubleClick","Resizable","children","resizable","Resizable$1"],"mappings":"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","x_google_ignoreList":[0,1]}